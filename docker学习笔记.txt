sudo apt-get install python-pip
sudo pip install shadowsocks

sudo vim /etc/shadowsocks.json

{
    "server":"110.65.96.6",
    "server_port":8137,
    "local_address": "127.0.0.1",
    "local_port":8138,
    "password":"hjj",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 1
}

ssserver -c /etc/shadowsocks.json    

sslocal -s 127.0.0.1 -p 8387 -l 1345 -k "hjj" -t 600 -m aes-256-cfb
sslocal -s 110.65.96.6  -p  8137 -k "hjj" //不能默认1080会占用


server   服务端监听的地址，服务端可填写 0.0.0.0
server_port     服务器的端口(只要不与现有的端口冲突，随你填写了，我填8137)
local_address     本地监听的地址，直接写127.0.0.1
local_port     本地的端口，随便写，只要不冲突，我填的是1345
password     你的shadowsocks连接密码
timeout     超时时间，单位秒
method     加密方式。默认是: "aes-256-cfb", 详见：see https://github.com/clowwindy/shadowsocks/wiki/Encryption
workers    应该是进程数，这个我没该，大家可以改后看看进程是否增多。不理解的化，就别改了，这个参数只有unix/linux下可用。
sudo /etc/init.d/shadowsocks start

99 cannot assign requested address docker
找不到服务器，找不到端口，无法分配地址

当前所有正在运行的container： docker ps 
上交：docker commit CONTAINER ID justsay/ubuntu
docker push justsay/ubuntu:latest
删除容器：
docker kill $(docker ps -q) ; 
docker rm $(docker ps -a -q) ;
docker rmi $(docker images -q -a)
建立运行容器：
docker build -t docker1 .
docker run -P docker1

docker ps -a 列出所有的container（包含历史，即运行过的container）
详细信息：docker inspect db34c035a5fd
进入： docker exec -it dcbf1e2317bc  bash
镜像大小：docker images | grep docker1 | awk '{print $7,$8}'

 

